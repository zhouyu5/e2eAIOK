apiVersion: ray.io/v1alpha1
kind: RayService
metadata:
  name: rayservice-lgbm
spec:
  serviceUnhealthySecondThreshold: 900 # Config for the health check threshold for Ray Serve applications. Default value is 900.
  deploymentUnhealthySecondThreshold: 300 # Config for the health check threshold for Ray dashboard agent. Default value is 300.
  serveConfigV2: |
    applications:
      - name: predict_lgbm_1
        import_path: serve.infer.boosting_model_1
        route_prefix: /pred1
        runtime_env:
          working_dir: "file:///apps/classic-ml.zip"
          pip:
            - gradio==3.19
            - lightgbm
        deployments:
          - name: BoostingModel
            num_replicas: 1
            user_config:
              cfg_file: "serve/config.yaml"
            ray_actor_options:
              num_cpus: 0.1
      - name: predict_lgbm_2
        import_path: serve.infer.boosting_model_2
        route_prefix: /pred2
        runtime_env:
          working_dir: "file:///apps/classic-ml.zip"
          pip:
            - gradio==3.19
            - lightgbm
        deployments:
          - name: BoostingModel
            num_replicas: 1
            user_config:
              cfg_file: "serve/config.yaml"
            ray_actor_options:
              num_cpus: 0.1
      - name: predict_ensemble
        import_path: serve.ensemble.ensemble_app
        route_prefix: /pred_sum
        runtime_env:
          working_dir: "file:///apps/classic-ml.zip"
        deployments:
          - name: ModelEnsemble
            num_replicas: 1
            ray_actor_options:
              num_cpus: 0.1
      - name: predict_gradio
        import_path: serve.infer.app
        route_prefix: /gradio
        runtime_env:
          working_dir: "file:///apps/classic-ml.zip"
          pip:
            - gradio==3.19
            - lightgbm
        deployments:
          - name: BoostingModel
            num_replicas: 1
            user_config:
              cfg_file: "serve/config.yaml"
            ray_actor_options:
              num_cpus: 0.1
          - name: MyGradioServer
            num_replicas: 1
            ray_actor_options:
              num_cpus: 0.1
  rayClusterConfig:
    rayVersion: '2.8.0' # should match the Ray version in the image of the containers
    ######################headGroupSpecs#################################
    # Ray head pod template.
    headGroupSpec:
      # The `rayStartParams` are used to configure the `ray start` command.
      # See https://github.com/ray-project/kuberay/blob/master/docs/guidance/rayStartParams.md for the default settings of `rayStartParams` in KubeRay.
      # See https://docs.ray.io/en/latest/cluster/cli.html#ray-start for all available options in `rayStartParams`.
      rayStartParams:
        dashboard-host: '0.0.0.0'
      #pod template
      template:
        spec:
          volumes:
          - name: app-disk
            persistentVolumeClaim:
              claimName: task-pv-claim
          containers:
            - name: ray-head
              image: rayproject/ray:2.8.0
              envFrom:
                - configMapRef:
                    name: proxy-config
              volumeMounts:
                - mountPath: /apps
                  name: app-disk
              resources:
                limits:
                  cpu: 5
                  memory: 10Gi
                requests:
                  cpu: 5
                  memory: 10Gi
              ports:
                - containerPort: 6379
                  name: gcs-server
                - containerPort: 8265 # Ray dashboard
                  name: dashboard
                - containerPort: 10001
                  name: client
                - containerPort: 8000
                  name: serve
    workerGroupSpecs:
      # the pod replicas in this group typed worker
      - replicas: 1
        minReplicas: 1
        maxReplicas: 5
        # logical group name, for this called small-group, also can be functional
        groupName: small-group
        # The `rayStartParams` are used to configure the `ray start` command.
        # See https://github.com/ray-project/kuberay/blob/master/docs/guidance/rayStartParams.md for the default settings of `rayStartParams` in KubeRay.
        # See https://docs.ray.io/en/latest/cluster/cli.html#ray-start for all available options in `rayStartParams`.
        rayStartParams: {}
        #pod template
        template:
          spec:
            volumes:
            - name: app-disk
              persistentVolumeClaim:
                claimName: task-pv-claim
            containers:
              - name: ray-worker # must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc'
                image: rayproject/ray:2.8.0
                volumeMounts:
                  - mountPath: /apps
                    name: app-disk
                lifecycle:
                  preStop:
                    exec:
                      command: ["/bin/sh","-c","ray stop"]
                resources:
                  limits:
                    cpu: 5
                    memory: 10Gi
                  requests:
                    cpu: 5
                    memory: 10Gi
